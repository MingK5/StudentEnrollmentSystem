@page
@model StudentEnrollmentSystem.Pages.Statement.StudentStatementModel
@{
    Layout = "_Layout";
}

<style>
    .top-bar {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 80%;
        margin: auto;
        margin-bottom: 15px;
    }

        .top-bar h2 {
            margin: 0;
            text-align: center; 
            flex-grow: 1; 
        }

    .form-inline {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .transaction-container {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        width: 80%;
        margin: auto;
    }

    .label-container {
        font-weight: bold;
        white-space: nowrap;
        width: 150px; 
        text-align: left;
    }

    .d-flex {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .button-container {
        display: flex;
        gap: 10px;
        align-items: center;
    }

    .form-control {
        padding: 8px;
        width: 180px;
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
        padding: 8px 20px;
        font-size: 16px;
    }

    .statement-table {
        width: 80%;
        margin: auto;
        border-collapse: collapse;
        margin-top: 20px;
    }

        .statement-table th, .statement-table td {
            border: 1px solid black;
            padding: 8px;
            text-align: center;
        }

        .statement-table th {
            background-color: #f2f2f2;
        }

    @@media print {
        body * {
            visibility: hidden;
        }

        #printableArea, #printableArea * {
            visibility: visible;
        }

        #printableArea {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
        }
    }
</style>

<div id="printableArea">
    <div class="top-bar">
        <h2 id="statementTitle">Student Statement</h2>
    </div>

    <form method="get" class="transaction-container">
        <div class="label-container">
            <label><strong>Transaction Date:</strong></label>
        </div>
        <div class="d-flex">
            <div>
                <label for="dateFrom">From</label>
                <input type="date" id="dateFrom" name="from" class="form-control" required />
            </div>
            <div>
                <label for="dateTo">To</label>
                <input type="date" id="dateTo" name="to" class="form-control" required />
            </div>
        </div>
        <div class="button-container">
            <button type="button" onclick="filterTransactions()" class="btn btn-primary">View</button>
            <button type="button" onclick="printStatement()" class="btn btn-primary">Print</button>
        </div>
    </form>

    <table class="statement-table" id="statementTable" style="display: none;">
        <thead>
            <tr>
                <th>DATE</th>
                <th>PROCESS</th>
                <th>PARTICULARS</th>
                <th>DOCUMENT NO.</th>
                <th>SESSION</th>
                <th>AMOUNT DUE (RM)</th>
                <th>AMOUNT PAID (RM)</th>
                <th>TOTAL DUE/PAID (RM)</th>
            </tr>
        </thead>
        <tbody id="transactionBody"></tbody>
        <tfoot>
            <tr>
                <td colspan="7"><strong>Balance</strong></td>
                <td id="balanceAmount"><strong>0.00</strong></td>
            </tr>
        </tfoot>
    </table>
</div>

<script>
    async function filterTransactions() {
        let dateFrom = document.getElementById("dateFrom").value;
        let dateTo = document.getElementById("dateTo").value;

        if (!dateFrom || !dateTo) {
            alert("Please select both from and to dates.");
            return;
        }

        const response = await fetch(`/Statement/StudentStatement?handler=FilterTransactions&dateFrom=${dateFrom}&dateTo=${dateTo}`);
        const transactions = await response.json();

        let tableBody = document.getElementById("transactionBody");
        tableBody.innerHTML = "";

        let totalBalance = 0;

        if (transactions.length > 0) {
            transactions.forEach(transaction => {
                let formattedDate = new Date(transaction.transactionDate).toISOString().split('T')[0];
                let row = `<tr>
                    <td>${formattedDate}</td>
                    <td>${transaction.process}</td>
                    <td>${transaction.particulars}</td>
                    <td>${transaction.documentNo}</td>
                    <td>${transaction.session}</td>
                    <td>${transaction.amount > 0 ? transaction.amount.toFixed(2) : "0.00"}</td>
                    <td>${transaction.amount < 0 ? (-transaction.amount).toFixed(2) : "0.00"}</td>
                    <td>${transaction.amount.toFixed(2)}</td>
                </tr>`;
                tableBody.innerHTML += row;
                totalBalance += transaction.amount;
            });
            document.getElementById("statementTable").style.display = "table";
        } else {
            tableBody.innerHTML = '<tr><td colspan="8">No transactions available.</td></tr>';
            document.getElementById("statementTable").style.display = "table";
        }

        document.getElementById("statementTitle").innerText = `Student Statement from ${dateFrom} to ${dateTo}`;
        document.getElementById("balanceAmount").innerHTML = `<strong>${totalBalance.toFixed(2)}</strong>`;
    }

    function printStatement() {
        window.print();
    }
</script>


