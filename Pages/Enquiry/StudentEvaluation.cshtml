@page
@model StudentEnrollmentSystem.Pages.Enquiry.StudentEvaluationModel
@inject IConfiguration Configuration
@{
    Layout = "_Layout";
}

<div class="container mt-4">
    <h2 class="text-center">Student Evaluation [@Configuration["Session"]]</h2>

    <form method="post" id="evaluationForm">
        <div class="form-group">
            <label for="courseSelect">Course Enrolled:</label>
            <select id="courseSelect" asp-for="EnrolId" asp-items="Model.CourseList" class="form-control" required>
                <option value="">-- Select Course --</option>
            </select>
        </div>

        <div class="container mt-4">
            <div id="courseDetails" class="card shadow p-4" hidden>
                <h4 class="mb-3 text-primary">Course Details</h4>
                <div class="row">
                    <div class="col-md-6">
                        <p><strong>Course ID:</strong> <span id="courseId"></span></p>
                        <p><strong>Course Name:</strong> <span id="courseName"></span></p>
                        <p><strong>Credit:</strong> <span id="credit"></span></p>
                        <p><strong>Lecturer:</strong> <span id="lecturer"></span></p>
                    </div>
                    <div class="col-md-6">
                        <p><strong>Start Time:</strong> <span id="startTime"></span></p>
                        <p><strong>End Time:</strong> <span id="endTime"></span></p>
                        <p><strong>Day:</strong> <span id="day"></span></p>
                    </div>
                </div>
            </div>
        </div>

        <div class="mt-3" id="buttonContainer" hidden>
            <button type="button" id="proceedBtn" class="btn btn-primary">Proceed</button>
        </div>

        <div id="evaluationSection" hidden>
            <h4>Evaluation Form</h4>
            <label>Organization Rate:</label>
            <select class="form-control" asp-for="Evaluation.OrganizationRate" required>
                <option value="">-- Select rate --</option>
                <option value="1">1 - Poor</option>
                <option value="2">2 - Fair</option>
                <option value="3">3 - Good</option>
                <option value="4">4 - Very Good</option>
                <option value="5">5 - Excellent</option>
            </select>

            <label>Clarity Rate:</label>
            <select class="form-control" asp-for="Evaluation.ClarityRate" required>
                <option value="">-- Select rate --</option>
                <option value="1">1 - Poor</option>
                <option value="2">2 - Fair</option>
                <option value="3">3 - Good</option>
                <option value="4">4 - Very Good</option>
                <option value="5">5 - Excellent</option>
            </select>

            <label>Material Rate:</label>
            <select class="form-control" asp-for="Evaluation.MaterialRate" required>
                <option value="">-- Select rate --</option>
                <option value="1">1 - Poor</option>
                <option value="2">2 - Fair</option>
                <option value="3">3 - Good</option>
                <option value="4">4 - Very Good</option>
                <option value="5">5 - Excellent</option>
            </select>

            <span id="errorMessage" style="color: red; display: none;">Please select a rating!</span>
            <br>
            <label>Comments:</label>
            <textarea class="form-control" asp-for="Evaluation.Comment"></textarea>

            <button type="submit" class="btn btn-success mt-3">Submit</button>
        </div>
    </form>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        const courseSelect = document.getElementById("courseSelect");
        const courseDetailsDiv = document.getElementById("courseDetails");
        const proceedBtn = document.getElementById("proceedBtn");
        const evaluationSection = document.getElementById("evaluationSection");
        const buttonContainer = document.getElementById("buttonContainer");

        let evaluatedCourses = [];

        courseSelect.addEventListener("change", function () {
            const courseId = this.options[this.selectedIndex].text;

            if (!courseId) {
                resetCourseDetails();
                return;
            }

                fetch(`/Enquiry/StudentEvaluation?handler=GetCourseDetails&courseId=${courseId}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data) {
                            document.getElementById("courseId").innerText = data.courseId || "N/A";
                            document.getElementById("courseName").innerText = data.courseName || "N/A";
                            document.getElementById("credit").innerText = data.credit || "N/A";
                            document.getElementById("lecturer").innerText = data.lecturer || "N/A";
                            document.getElementById("startTime").innerText = data.startTime || "N/A";
                            document.getElementById("endTime").innerText = data.endTime || "N/A";
                            document.getElementById("day").innerText = data.day || "N/A";

                            courseDetailsDiv.hidden = false;
                            buttonContainer.hidden = false;
                        
                        }
                    })
                    .catch(error => {
                        console.error("Error fetching course details:", error);
                        resetCourseDetails();
                    });
            
            });

        function resetCourseDetails() {
            courseDetailsDiv.hidden = true;
            buttonContainer.hidden = true;
            evaluationSection.hidden = true;

            document.getElementById("courseId").innerText = "";
            document.getElementById("courseName").innerText = "";
            document.getElementById("credit").innerText = "";
            document.getElementById("lecturer").innerText = "";
            document.getElementById("startTime").innerText = "";
            document.getElementById("endTime").innerText = "";
            document.getElementById("day").innerText = "";
        }

        proceedBtn.addEventListener("click", function () {
            courseDetailsDiv.hidden = true;
            buttonContainer.hidden = true;
            evaluationSection.hidden = false;
        });

        document.getElementById("evaluationForm").addEventListener("submit", function (event) {
            event.preventDefault(); 

            var organizationRate = document.getElementById("Evaluation_OrganizationRate").value;
            var clarityRate = document.getElementById("Evaluation_ClarityRate").value;
            var materialRate = document.getElementById("Evaluation_MaterialRate").value;
            var errorMessage = document.getElementById("errorMessage");

            if (organizationRate === "" || clarityRate === "" || materialRate === "") {
                errorMessage.style.display = "block"; 
                return;
            } else {
                errorMessage.style.display = "none"; 
            }

            const formData = new FormData(this);
            fetch("/Enquiry/StudentEvaluation", {
                method: "POST",
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Evaluation submitted successfully!");
                    evaluatedCourses.push(courseSelect.value); 
                    updateDropdown();
                    resetCourseDetails();
                } else {
                    alert("Error submitting evaluation. Please try again.");
                }
            })
            .catch(error => {
                console.error("Submission error:", error);
                alert("An error occurred. Please try again.");
            });
        });

        function updateDropdown() {
            const options = courseSelect.options;
            for (let i = options.length - 1; i >= 0; i--) {
                if (evaluatedCourses.includes(options[i].value)) {
                    options[i].remove();
                }
            }

            if (options.length === 1) {
                alert("All enrolled courses have been evaluated.");
                window.location.href = "/Main";
            }
        }
    });
</script>


